

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>WenQi Wei</title>
  <subtitle>这里是，way的世界！welcome！</subtitle>
  <updated>2025-04-14T22:15:16+08:00</updated>
  <author>
    <name>WenQi Wei</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 WenQi Wei </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>TensorFlow学习笔记(2.1)：BasicModels章linear_regression篇</title>
    <link href="http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02_1/" rel="alternate" type="text/html" title="TensorFlow学习笔记(2.1)：BasicModels章linear_regression篇" />
    <published>2025-04-05T23:38:00+08:00</published>
  
    <updated>2025-04-05T23:28:45+08:00</updated>
  
    <id>http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02_1/</id>
    <content type="text/html" src="http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02_1/" />
    <author>
      <name>way-adventurer</name>
    </author>

  
    
    <category term="教程" />
    
  

  <summary>本文是 TensorFlow 学习笔记系列的实操第二篇，主要介绍 TensorFlow 的线性回归。通过实际代码示例，帮助初学者快速入门 TensorFlow 2.x。


1. 线性回归简介
线性回归是机器学习中最基础的算法之一，用于预测连续型数值。本教程将使用 TensorFlow 2.x 实现一个简单的线性回归模型。

2. 环境准备
from __future__ import absolute_import, division, print_function
import tensorflow as tf
import numpy as np
rng = np.random


3. 模型参数设置
# 模型超参数
learning_rate = 0.01    # 学习率
training_steps = 1000   # 训练步数
display_step = 50   ...</summary>

  </entry>

  
  <entry>
    <title>TensorFlow学习笔记(2.2)：BasicModels章logistic_regression篇</title>
    <link href="http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02_2/" rel="alternate" type="text/html" title="TensorFlow学习笔记(2.2)：BasicModels章logistic_regression篇" />
    <published>2025-04-05T23:38:00+08:00</published>
  
    <updated>2025-04-05T23:38:00+08:00</updated>
  
    <id>http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02_2/</id>
    <content type="text/html" src="http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02_2/" />
    <author>
      <name>way-adventurer</name>
    </author>

  
    
    <category term="教程" />
    
  

  <summary>本文是 TensorFlow 学习笔记系列的实操第二篇，将详细讲解如何使用 TensorFlow 2.x 实现逻辑回归模型来识别手写数字。我们将使用 MNIST 数据集，这是机器学习领域最基础和著名的数据集之一。


2. MNIST数据集介绍

MNIST数据集包含：

  训练集：60,000张图片
  测试集：10,000张图片
  图片尺寸：28x28像素
  数据特征：灰度图像，像素值范围0-255
  分类目标：10个数字（0-9）


3. 环境准备

导入库函数：
from __future__ import absolute_import, division, print_function

import tensorflow as tf
import numpy as np


4. 代码详解

4.1 数据预处理
# 数据集参数
num_classes = 10...</summary>

  </entry>

  
  <entry>
    <title>TensorFlow学习笔记(1)：Introduction章helloworld与basic_operations篇</title>
    <link href="http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/" rel="alternate" type="text/html" title="TensorFlow学习笔记(1)：Introduction章helloworld与basic_operations篇" />
    <published>2025-04-05T23:20:00+08:00</published>
  
    <updated>2025-04-05T23:28:45+08:00</updated>
  
    <id>http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</id>
    <content type="text/html" src="http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/" />
    <author>
      <name>way-adventurer</name>
    </author>

  
    
    <category term="教程" />
    
  

  <summary>本文是 TensorFlow 学习笔记系列的实操第一篇，主要介绍 TensorFlow 的基础概念和张量运算。通过实际代码示例，帮助初学者快速入门 TensorFlow 2.x。


一、helloworld
1. 简介
这是一个最基础的 TensorFlow 入门示例，通过创建和操作简单的张量来帮助初学者理解 TensorFlow 的基本概念。

2. 环境准备
TensorFlow 2.x 版本的安装与配置：
import tensorflow as tf


3. 张量(Tensor)基础
张量是 TensorFlow 中的核心概念，它是一个多维数组，类似于 NumPy 的 ndarray。

3.1 创建第一个张量
# 创建一个字符串张量
hello = tf.constant(&amp;quot;hello world&amp;quot;)
print(hello)  # 输出张量对象信息


3.2 访问张...</summary>

  </entry>

  
  <entry>
    <title>TensorFlow学习笔记(0)：环境配置与版本兼容性解析</title>
    <link href="http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B00/" rel="alternate" type="text/html" title="TensorFlow学习笔记(0)：环境配置与版本兼容性解析" />
    <published>2025-04-03T19:42:00+08:00</published>
  
    <updated>2025-04-05T23:25:30+08:00</updated>
  
    <id>http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B00/</id>
    <content type="text/html" src="http://localhost:4000/posts/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B00/" />
    <author>
      <name>way-adventurer</name>
    </author>

  
    
    <category term="教程" />
    
  

  <summary>本系列博客将记录我在学习 TensorFlow 过程中的经验和心得。从环境配置到实际应用，希望能为其他学习者提供有价值的参考。


一、项目介绍

在开始 TensorFlow 学习之旅之前，我选择了一个非常优质的学习资源：TensorFlow Examples 项目。这个项目提供了从基础到进阶的多个实例，包括：


  线性回归
  逻辑回归
  多层感知器
  卷积神经网络
  循环神经网络等


每个示例都配备了详细的代码注释，非常适合初学者循序渐进地学习。

二、环境配置与版本兼容性

1. 版本兼容性问题分析

在初次运行示例代码时，遇到了以下错误：


TensorFlow 1.x 与 2.x 版本不兼容错误

代码分析：
import tensorflow as tf
hello = tf.constant(&amp;#39;Hello, TensorFlow!&amp;#39;)
sess = tf...</summary>

  </entry>

  
  <entry>
    <title>DeepKe开源框架实战2：从环境配置到项目运行的踩坑之路</title>
    <link href="http://localhost:4000/posts/Deepke%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%A4%8D%E7%8E%B02/" rel="alternate" type="text/html" title="DeepKe开源框架实战2：从环境配置到项目运行的踩坑之路" />
    <published>2025-03-27T17:03:00+08:00</published>
  
    <updated>2025-04-03T19:03:33+08:00</updated>
  
    <id>http://localhost:4000/posts/Deepke%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%A4%8D%E7%8E%B02/</id>
    <content type="text/html" src="http://localhost:4000/posts/Deepke%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%A4%8D%E7%8E%B02/" />
    <author>
      <name>way-adventurer</name>
    </author>

  
    
    <category term="教程" />
    
  

  <summary>在人工智能快速发展的今天，将大语言模型与知识图谱技术相结合成为一个重要趋势。本文详细记录了在 DeepKE 框架下进行知识抽取的实践经验。


一、深入理解 In-Context Learning

1. ICL 原理解析

In-Context Learning (ICL) 是大语言模型的一个重要特性，它允许模型通过少量示例来理解并执行特定任务。在 DeepKE 中的实现主要包括：


  示例构造
    def prepare_examples(data_path: str, task_type: str, language: str) -&amp;amp;gt; List[Dict]:
 &amp;quot;&amp;quot;&amp;quot;构建上下文学习示例
 Args:
     data_path: 示例数据路径
     task_type: 任务类型 (ner/re/ee/rte)
     language: 语言类型 (en...</summary>

  </entry>

</feed>


